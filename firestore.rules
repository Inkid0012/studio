rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // USERS
    // Allow any authenticated user to read any profile
    // Allow users to create and update their own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // CALLS
    // Allow users to access calls they are part of
    match /calls/{callId} {
      allow read, write: if request.auth != null && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.from;
    }

    // CONVERSATIONS
    match /conversations/{conversationId} {
      // Allow read/update/delete if user is a participant
      allow read, update, delete: if request.auth != null && request.auth.uid in resource.data.participantIds;
      
      // Allow create if the creating user is in the participantIds array of the new document
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;

      // Allow listing conversations that the user is part of
      allow list: if request.auth != null && request.auth.uid in request.query.where.participantIds;

      // MESSAGES subcollection
      match /messages/{messageId} {
         // Allow read/write if user is a participant of the parent conversation
         allow read, write: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }
  }
}
