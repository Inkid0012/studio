rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // User profiles
    match /users/{userId} {
      // Allow any authenticated user to get or list user profiles.
      // This is needed for the Discover screen and viewing profiles.
      allow get, list: if request.auth != null;

      // Allow a user to create, update, or delete their own profile.
      // A special rule allows a user to update another user's 'visitors' list.
      allow create, delete: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId ||
                     (request.auth.uid != null &&
                      request.resource.data.visitors == resource.data.visitors +
                        [{'userId': request.auth.uid, 'timestamp': request.time.toString()}]
                     );
    }

    // Conversations
    match /conversations/{conversationId} {
      function isParticipant() {
        return request.auth.uid in resource.data.participantIds;
      }

      allow get, list, update: if isParticipant();
      allow create: if request.auth.uid in request.resource.data.participantIds;

      // Messages within a conversation
      match /messages/{messageId} {
        allow read, write: if isParticipant();
      }
    }

    // Calls
    match /calls/{callId} {
      function isCallerOrReceiver() {
        return request.auth.uid == resource.data.from || request.auth.uid == resource.data.to;
      }
      
      allow read, update: if isCallerOrReceiver();
      allow create: if request.auth.uid == request.resource.data.from;
    }
  }
}
