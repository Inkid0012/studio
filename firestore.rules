rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only be created if the user is authenticated and the user ID matches the document ID.
    // Any authenticated user can read other user profiles (for discovery).
    // Users can only update or delete their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for conversations.
    // A user can create a conversation ONLY IF their own UID is in the participantIds array of the new document.
    // Users can only read, update, or delete conversations they are a part of.
    match /conversations/{conversationId} {
      allow get, list, update, delete: if request.auth != null && request.auth.uid in resource.data.participantIds;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;

      // Rules for messages within a conversation.
      // Users can only read/list messages of a conversation they are part of.
      // Users can only create a message if they are a participant and the senderId is their own.
      match /messages/{messageId} {
        allow get, list: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        allow create: if request.auth != null 
                      && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds
                      && request.resource.data.senderId == request.auth.uid;
      }
    }
    
    // Catch-all to deny all other reads/writes by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
