
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // USERS collection
    // Allow authenticated users to read any profile.
    // Allow users to create and update their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // CONVERSATIONS collection
    // Allow users to access conversations they are part of.
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;
      // Allow creation if the user is a participant
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;
    }

    // MESSAGES subcollection
    // Allow users to access messages in conversations they are part of.
    match /conversations/{conversationId}/messages/{messageId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
    }
    
    // CALLS collection
    // Allow authenticated users to interact with calls they are involved in.
    match /calls/{callId} {
        allow read, write: if request.auth != null && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
        // Allow creation if the user is the caller
        allow create: if request.auth != null && request.auth.uid == request.resource.data.from;
    }
  }
}
