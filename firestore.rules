
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any user profile, but can only write to their own.
    // This allows the Discover page to function while keeping user data secure.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Rules for conversations
    match /conversations/{conversationId} {
      // Allow read/write if the user is a participant in the conversation.
      allow read, update, delete: if request.auth.uid in resource.data.participantIds;
      
      // Allow create if the user's ID is in the new conversation's participant list.
      // This is the key fix for the "insufficient permissions" error.
      allow create: if request.auth.uid in request.resource.data.participantIds;

      // Rules for messages within a conversation
      match /messages/{messageId} {
        // Allow read if the user is a participant in the parent conversation.
        allow read: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
        
        // Allow create if the user is the sender and is a participant in the conversation.
        allow create: if request.resource.data.senderId == request.auth.uid && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
        
        // Disallow updates and deletes on messages to preserve chat history.
        allow update, delete: if false;
      }
    }
    
    // Rules for call documents
    match /calls/{callId} {
        allow read, write: if request.auth != null && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
    }
  }
}
