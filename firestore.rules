
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // ANYONE can read a user's profile (for discover, chat, etc.)
      allow get: if true;
      
      // ANY authenticated user can see the list of users
      allow list: if isSignedIn();

      // A user can CREATE their OWN profile document
      allow create: if isOwner(userId);

      // A user can UPDATE their OWN document, OR be updated by another user for following/unfollowing
      allow update: if isSignedIn() && (
                    isOwner(userId) || 
                    (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['followers', 'visitors']))
                  );

      // A user can DELETE their OWN document
      allow delete: if isOwner(userId);
    }

    // Rules for the 'conversations' collection
    match /conversations/{conversationId} {
      // Participants of a conversation can read/write to it
      allow read, write: if isSignedIn() && request.auth.uid in resource.data.participantIds;
      
      // Authenticated users can create a new conversation IFF they are a participant in it
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
      
      // Rules for the 'messages' subcollection
      match /messages/{messageId} {
         // A user can read/write messages if they are part of the parent conversation
         allow read, write: if isSignedIn() && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }
    
    // Rules for the 'calls' collection
    match /calls/{callId} {
        // Only authenticated users who are part of the call can access it
        allow read, update: if isSignedIn() && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
        
        // Only an authenticated user can create a call, and they must be the sender
        allow create: if isSignedIn() && request.auth.uid == request.resource.data.from;
    }
  }
}
