
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Participants can read/write conversations they are a part of.
    match /conversations/{conversationId} {
      allow get, list: if request.auth != null && request.auth.uid in resource.data.participantIds;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;
      allow update: if request.auth != null && request.auth.uid in resource.data.participantIds;

      // Messages can be read/written by conversation participants.
      match /messages/{messageId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }
    
    // Participants can interact with calls they are involved in.
    match /calls/{callId} {
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.from;
    }
  }
}
