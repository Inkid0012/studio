rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read all profiles for discovery, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // A user can read/write a conversation only if they are a participant.
    match /conversations/{conversationId} {
      allow get, list, create: if request.auth.uid in resource.data.participantIds;
      
      // Allow a user to create a conversation if they are in the participants list.
      allow create: if request.auth.uid in request.resource.data.participantIds;

      // Messages can only be accessed by participants of the parent conversation.
      match /messages/{messageId} {
        allow read, create: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
        
        // Allow updates only to the 'readBy' field (for read receipts).
        allow update: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid])
                      && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy']);
      }
    }

    // Only the caller or receiver can access or update a call document.
    match /calls/{callId} {
      allow read, update: if request.auth.uid == resource.data.from || request.auth.uid == resource.data.to;
      allow create: if request.auth.uid == request.resource.data.from;
    }
  }
}
