rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // User profiles can be read by any authenticated user, but only written by the owner.
    match /users/{userId} {
      allow get, list: if request.auth != null;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Conversations can only be accessed by participants.
    match /conversations/{conversationId} {
      allow get, list: if request.auth != null && request.auth.uid in resource.data.participantIds;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;
      allow update: if request.auth != null && request.auth.uid in resource.data.participantIds;

      // Messages follow the same rule as the parent conversation.
      match /messages/{messageId} {
        allow read, write: if request.auth != null &&
          get(/databases/$(database)/documents/conversations/$(conversationId))
            .data.participantIds.hasAny([request.auth.uid]);
      }
    }

    // Calls can only be accessed by the sender or receiver.
    match /calls/{callId} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.from;
    }
  }
}
