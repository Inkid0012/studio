rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      // Allow authenticated users to list all profiles for discovery
      allow list: if request.auth != null;
      
      // Allow users to read any single profile and write only to their own.
      allow get, create, update, delete: if request.auth.uid == userId;
      allow read: if request.auth != null;
    }

    match /conversations/{conversationId} {
      // Allow read/update if the user is a participant
      allow read, update: if request.auth.uid in resource.data.participantIds;
      // Allow create if the user's ID is in the new conversation's participants
      allow create: if request.auth.uid in request.resource.data.participantIds;
      
      match /messages/{messageId} {
        // Allow read if user is a participant of the parent conversation
        allow read: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds[0] == request.auth.uid || get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds[1] == request.auth.uid;
        // Allow create if the user is the sender and a participant
        allow create: if request.resource.data.senderId == request.auth.uid && (get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds[0] == request.auth.uid || get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds[1] == request.auth.uid);
      }
    }

    match /calls/{callId} {
      // Allow read if user is the caller or receiver
      allow read: if resource.data.from == request.auth.uid || resource.data.to == request.auth.uid;
      // Allow create if user is the caller
      allow create: if request.resource.data.from == request.auth.uid;
      // Allow update if user is caller or receiver
      allow update: if resource.data.from == request.auth.uid || resource.data.to == request.auth.uid;
    }
  }
}
