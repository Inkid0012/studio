
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all access to prevent unintentional data exposure.
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can only update their own profile, but any authenticated user can read any profile.
    // This is needed for the discover page and viewing other users' profiles.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Rules for conversations and their sub-collections (messages).
    match /conversations/{conversationId} {
      // Allow read/get if the user is a participant.
      allow get: if request.auth.uid in resource.data.participantIds;
      
      // Allow listing conversations a user is part of.
      allow list: if request.auth.uid in request.query.where.get('participantIds', [''])[0];

      // Allow creating a conversation if the user is a participant.
      allow create: if request.auth.uid in request.resource.data.participantIds;

      // Allow updating (e.g., lastMessage) if the user is a participant.
      allow update: if request.auth.uid in resource.data.participantIds;

      // Rules for the 'messages' sub-collection within a conversation.
      match /messages/{messageId} {
        // A user can read/write messages only if they are part of the parent conversation.
        allow read, write: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }

    // Calls can be read or updated by either the caller or receiver.
    // Calls can be created by any authenticated user.
    match /calls/{callId} {
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
      allow create: if request.auth != null;
    }
  }
}
