rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Deny all reads and writes by default for security.
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow get, list: if request.auth != null;
      allow create, update, delete: if request.auth.uid == userId;
    }

    // Participants can interact with conversations they are a part of.
    match /conversations/{conversationId} {
      allow get: if request.auth.uid in resource.data.participantIds;
      // Allow a user to query for conversations they are in.
      allow list: if request.auth.uid == request.query.filters[0].value;
      allow create: if request.auth.uid in request.resource.data.participantIds;
      allow update: if request.auth.uid in resource.data.participantIds;

      // Messages can be accessed by conversation participants.
      match /messages/{messageId} {
        allow read, write: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
      }
    }

    // Participants can interact with calls they are involved in.
    match /calls/{callId} {
      allow read, write: if request.auth.uid == resource.data.from || request.auth.uid == resource.data.to;
      allow create: if request.auth.uid == request.resource.data.from;
    }
    
    // Allow authenticated users to read from the 'discover' collection.
    match /discover/{docId} {
      allow get, list: if request.auth != null;
    }
  }
}
